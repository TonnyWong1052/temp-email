# Temporary Email Service Docker Compose Configuration
# GitHub: https://github.com/TonnyWong1052/temp-email
version: '3.8'

services:
  # Redis 服務（用於分布式存儲和緩存）
  redis:
    image: redis:7-alpine
    container_name: email-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - email-network

  temp-email:
    build: .
    container_name: email-service
    ports:
      - "1234:1234"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      # 服务器配置
      - PORT=1234
      - HOST=0.0.0.0
      - RELOAD=false

      # Redis 配置（高流量支持）
      - REDIS_URL=redis://redis:6379/0
      - ENABLE_REDIS=true
      - CACHE_TTL=30
      - CACHE_MAX_SIZE=10000

      # 流量控制配置
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_PER_MINUTE=60
      - CIRCUIT_BREAKER_ENABLED=true
      - CIRCUIT_BREAKER_THRESHOLD=5
      - CIRCUIT_BREAKER_TIMEOUT=60

      # Cloudflare Workers KV 配置
      # ⚠️ 请填写你的 Cloudflare 凭据
      - USE_CLOUDFLARE_KV=false
      - CF_ACCOUNT_ID=${CF_ACCOUNT_ID:-}
      - CF_KV_NAMESPACE_ID=${CF_KV_NAMESPACE_ID:-}
      - CF_API_TOKEN=${CF_API_TOKEN:-}
      - CF_KV_DOMAINS=${CF_KV_DOMAINS:-}

      # 域名配置
      - ENABLE_CUSTOM_DOMAINS=${ENABLE_CUSTOM_DOMAINS:-false}
      - CUSTOM_DOMAINS=${CUSTOM_DOMAINS:-[]}
      - ENABLE_BUILTIN_DOMAINS=${ENABLE_BUILTIN_DOMAINS:-true}

      # LLM 验证码提取
      - USE_LLM_EXTRACTION=${USE_LLM_EXTRACTION:-true}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.longcat.chat/openai/v1}
      - OPENAI_MODEL=${OPENAI_MODEL:-LongCat-Flash-Chat}

      # 管理员认证
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - ADMIN_SECRET_KEY=${ADMIN_SECRET_KEY:-your-secret-key-here-change-in-production}

      # CORS 配置
      - CORS_ORIGINS=${CORS_ORIGINS:-["*"]}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:1234/api/health')"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - email-network
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data

volumes:
  redis-data:
    driver: local

networks:
  email-network:
    driver: bridge
